<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.googlecode.luceneappengine</groupId>
	<artifactId>gae-test-index</artifactId>
	<version>3.5.0</version>
	<packaging>war</packaging>

	<name>${gae.application.name}</name>
	<url>https://code.google.com/p/lucene-appengine-examples/</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<lucene.version>8.5.1</lucene.version>
		<luceneappengine.version>4.4.0</luceneappengine.version>
		<slf4j.version>1.7.13</slf4j.version>
		<gae.application.name>bigtablelucene</gae.application.name>
		<gae.plugin.version>1.9.80</gae.plugin.version>
		<gae.version>1.9.84</gae.version>
		<gae.application.version>test</gae.application.version>
		<gae.serverId>bigtable-lucene</gae.serverId>
		<splitJars>true</splitJars>
	</properties>

	<dependencies>
		<!-- jars from GAE's "lib/user" must be added as compile-time dependencies, 
			as described here in "Copying JARs" section: http://code.google.com/appengine/docs/java/tools/ant.html -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0.2</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>

		<!-- J2EE Servlet API. We need it to compile IndexServlet class. You can 
			probably remove it, if you don't explicitly use Servlets. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>

		<!-- Make use of JSP tags. Remove, if you don't use JSPs. -->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.luceneappengine</groupId>
			<artifactId>luceneappengine</artifactId>
			<version>${luceneappengine.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency><!-- useful only to read old indexes created with older lucene version -->
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-backward-codecs</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		
		<!-- These dependencies are here just for enabling logging. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.0</version>
            <scope>test</scope>
        </dependency>
        <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- <dependency> -->
        <!-- <groupId>com.google.appengine</groupId> -->
        <!-- <artifactId>appengine-api-labs</artifactId> -->
        <!-- <version>${gae.version}</version> -->
        <!-- <scope>test</scope> -->
        <!-- </dependency> -->

        <!-- <dependency> -->
        <!-- <groupId>com.google.appengine</groupId> -->
        <!-- <artifactId>appengine-api-stubs</artifactId> -->
        <!-- <version>${gae.version}</version> -->
        <!-- <scope>test</scope> -->
        <!-- </dependency> -->
	</dependencies>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.9.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
			</plugins>
		</pluginManagement>	
		<extensions>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>2.4</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<artifactId>maven-archetype-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Type "mvn appengine:devserver" to run and "mvn appengine:update" to upload to GAE. -->
			<plugin>
				<groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
				<version>${gae.plugin.version}</version>
				<configuration>
				    <enableJarClasses>true</enableJarClasses>
					<jvmFlags>
						<jvmFlag>-Xdebug</jvmFlag>
						<jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000</jvmFlag>
						<jvmFlag>-noverify</jvmFlag>
					</jvmFlags>
				</configuration>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform. -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>appengine:update</goals>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
